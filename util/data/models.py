from dataclasses import dataclass, field
from datetime import datetime, time
from typing import Optional, List

# GENERATED BY CHAT, NOT FINAL, CAN AND WILL CONTAIN MISTAKES BECAUSE CHAT IS IDITO
@dataclass
class User:
    user_id: int = field(default=0)
    username: str = field(default='')
    first_name: str = field(default='')
    last_name: str = field(default='')
    mail: str = field(default='')
    phone: str = field(default='')

@dataclass
class Student():
    student_id: int = field(default=0)
    country: int = field(default=0)
    city: int = field(default=0)
    street: int = field(default=0)
    postal_code: int = field(default=0)

@dataclass
class EmployeeType:
    type_id: int = field(default=0)
    type_name: int = field(default=0)

@dataclass
class Employee():
    employee_id: int = field(default=0)
    type_id: int = field(default=0)
    title: int = field(default=0)

@dataclass
class ProductType:
    type_id: int = field(default=0)
    type_name: int = field(default=0)

@dataclass
class Product:
    product_id: int = field(default=0)
    category_id: int = field(default=0)
    price: int = field(default=0)
    vacancies: int = field(default=0)
    total_amount: int = field(default=0)
    type_id: int = field(default=0)

@dataclass
class Course(Product):
    course_name: str = field(default='')
    course_description: int = field(default=0)

@dataclass
class Study(Product):
    study_name: str = field(default='')
    study_description: int = field(default=0)

@dataclass
class Order:
    order_id: int = field(default=0)
    student_id: int = field(default=0)
    order_date: datetime = field(default_factory=datetime.now)
    complete_payment_date: Optional[datetime] = None

@dataclass
class OrderDetails:
    order_id: int = field(default=0)
    product_id: int = field(default=0)
    discount: int = field(default=0)

@dataclass
class Payment:
    payment_id: int = field(default=0)
    order_id: int = field(default=0)
    payment_date: int = field(default=0)
    payment_value: int = field(default=0)

@dataclass
class Webinar(Product):
    tutor_id: int = field(default=0)
    webinar_name: int = field(default=0)
    webinar_description: int = field(default=0)
    video_url: str = field(default='')
    webinar_duration: time = field(default_factory=time)
    publish_date: datetime = field(default_factory=datetime.now)
    price: float = field(default=0.0)
    language: int = field(default=0)
    translator_id: int = field(default=0)

@dataclass
class Meeting:
    meeting_id: int = field(default=0)
    tutor_id: int = field(default=0)
    term: datetime = field(default_factory=datetime.now)
    duration: time = field(default_factory=time)
    translator_id: Optional[int] = None
    language: str = field(default='')

@dataclass
class MeetingDetails:
    meeting_id: int = field(default=0)
    student_id: int = field(default=0)
    attendance: bool = field(default=False)

@dataclass
class SyncMeeting(Meeting):
    video_url: str = field(default='')
    meeting_url: int = field(default=0)

@dataclass
class AsyncMeeting(Meeting):
    meeting_url: int = field(default=0)

@dataclass
class StationaryMeeting(Meeting):
    classroom: str = field(default='')

@dataclass
class Subject:
    subject_id: int = field(default=0)
    study_id: int = field(default=0)
    employee_id: int = field(default=0)

@dataclass
class Internship:
    internship_id: int = field(default=0)
    study_id: int = field(default=0)

@dataclass
class InternshipDetails:
    work_day_id: int = field(default=0)
    internship_id: int = field(default=0)
    student_id: int = field(default=0)
    date: datetime = field(default_factory=datetime.now)
    attendance: bool = field(default=False)

@dataclass
class Module:
    module_id: int = field(default=0)
    course_id: int = field(default=0)